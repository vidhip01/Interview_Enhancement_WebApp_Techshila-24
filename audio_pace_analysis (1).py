# -*- coding: utf-8 -*-
"""Audio_Pace_Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1W8-iiWZbx6tIIv7JZu-NJ1V05Ah926NO
"""

!pip install git+https://github.com/openai/whisper.git

import whisper
import os
from tqdm import tqdm
import torch
import numpy as np
import matplotlib.pyplot as plt
import librosa

from google.colab import drive
drive.mount("/content/drive/")

def calculate_speaking_pace(transcript, duration):
  words = transcript.split()
  num_words = len(words)
  speaking_pace = (num_words / duration) * 60
  return speaking_pace

def process_audio_file(audio_file_path):
  pace_data = []
  try:
    model1 = whisper.load_model('base')
    decode_options = {"language": "english"}
    audio_data, sample_rate = librosa.load(audio_file_path)
    result = model1.transcribe(audio_data)
    duration_seconds = result.get('segments', [-1])[-1].get('end', -1)
    pace = calculate_speaking_pace(result['text'], duration_seconds)
    #pace_data.append(pace)
  except Exception as e:
    print(f"Error processing file '{audio_file_path}': {e}")
    return None

  return pace

def pace_feedback(pace):
    ideal_lower_bound = 140
    ideal_upper_bound = 160

    feedback = []
    if pace < ideal_lower_bound:
      feedback.append("Your speaking pace is slower than ideal.")
    elif pace > ideal_upper_bound:
      feedback.append("Your speaking pace is faster than ideal.")
    else:
      feedback.append("Your speaking pace is within the ideal range.")
    return feedback

audio_dir = "/content/drive/MyDrive/Audio_1"
all_pace_data = []
all_feedback = []

for filename in tqdm(os.listdir(audio_dir)):
  if filename.endswith(".wav") or filename.endswith(".mp3") or filename.endswith(".flac"):
    audio_file_path = os.path.join(audio_dir, filename)
    pace = process_audio_file(audio_file_path)
    all_pace_data.append(pace)
    feedback = pace_feedback(pace)
    all_feedback.append(feedback)
print(f"Pace Data : {all_pace_data} and Feedback : {all_feedback}")